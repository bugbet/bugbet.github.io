{"version":3,"sources":["serviceWorker.js","index.js","AsyncFetch.js","App.js","metamask.js"],"names":["Boolean","window","location","hostname","match","ReactDOM","render","react_default","a","createElement","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","AsyncFetch","state","status","result","mounted","fetch","args","_this","setState","props","catch","e","message","clear","this","autoFetch","prevProps","Object","_root_bugbet_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","React","Component","defaultProps","theme","createMuiTheme","palette","type","primary","main","secondary","error","augur","Augur","connectOptions","constants","augurNode","ethereumNode","http","pollingIntervalMilliseconds","blockRetention","connectionTimeout","useWeb3Transport","web3","useWebsocketToConnectAugurNode","console","log","styles","@global","body","appBar","position","toolbarTitle","flex","layout","_root_bugbet_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_8__","width","marginLeft","spacing","marginRight","breakpoints","up","heroContent","maxWidth","margin","padding","concat","cardHeader","cardPricing","display","justifyContent","alignItems","marginBottom","cardActions","paddingBottom","footer","marginTop","borderTop","divider","AugurApi","_root_bugbet_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","_root_bugbet_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_5__","_root_bugbet_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_6__","call","connected","connect","rpc","setDebugOptions","broadcast","tx","pify","_ref","global","eth","getAccounts","err","accounts","length","getMarkets","params","markets","_root_bugbet_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_2__","universe","contracts","Universe","marketIds","getMarketsInfo","Promise","resolve","getBetterWorseOrders","trading","getOrders","placeTrade","getCategories","Outcome","_ref6","style","price","react__WEBPACK_IMPORTED_MODULE_9___default","border","fontSize","height","backgroundColor","MarketsContainer","styled","div","_templateObject","SimpleTable","_ref7","titles","rows","_material_ui_core_Table__WEBPACK_IMPORTED_MODULE_28__","_material_ui_core_TableHead__WEBPACK_IMPORTED_MODULE_31__","_material_ui_core_TableRow__WEBPACK_IMPORTED_MODULE_32__","map","title","_material_ui_core_TableCell__WEBPACK_IMPORTED_MODULE_30__","key","_material_ui_core_TableBody__WEBPACK_IMPORTED_MODULE_29__","row","join","cell","i","MarketDetails","_ref8","details","dangerouslySetInnerHTML","__html","getMaxOutcome","outcomes","outcome","sort","Market","withStyles","_ref9","category","classes","id","description","openInterest","settlementFee","volume","marketType","endTime","reportingState","tags","_React$useState","useState","_React$useState2","_root_bugbet_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","open","setOpen","_React$useState3","getModalStyle","modalStyle","handleOpen","classes2","useModalStyles","_material_ui_core_Card__WEBPACK_IMPORTED_MODULE_14__","_material_ui_core_CardHeader__WEBPACK_IMPORTED_MODULE_17__","subheader","titleTypographyProps","variant","subheaderTypographyProps","align","action","_material_ui_icons_StarBorder__WEBPACK_IMPORTED_MODULE_22___default","cursor","className","_material_ui_core_CardContent__WEBPACK_IMPORTED_MODULE_16__","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_24__","distanceInWordsStrict","Date","addSuffix","unit","_material_ui_core_CardActions__WEBPACK_IMPORTED_MODULE_15__","textAlign","_material_ui_core_Chip__WEBPACK_IMPORTED_MODULE_21__","icon","_material_ui_icons_Close__WEBPACK_IMPORTED_MODULE_23___default","label","Fragment","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_13__","color","onClick","_material_ui_core_Modal__WEBPACK_IMPORTED_MODULE_11__","aria-labelledby","aria-describedby","onClose","paper","MarketBet","marketId","sortByKey","b","getBestSell","sells","reverse","getBestBuy","buys","smallify","num","parseInt","top","left","transform","makeStyles","background","boxShadow","shadows","outline","Web3Accounts","_ref11","_useState","_useState2","setAccounts","useEffect","MarketBetView","_ref12","orders","_useState3","_useState4","bet","setBet","_orders$Object$keys$","keys","buy","sell","bestBuy","values","bestSell","oddsTrue","oddsFalse","payoutTrue","payoutFalse","toPrecision","onButtonClick","tradeParams","amount","sharesProvided","limitPrice","minPrice","maxPrice","numTicks","_direction","_market","_outcome","doNotCreateOrders","meta","accountType","address","signer","onSent","onSuccess","onFailed","_material_ui_core_Grid__WEBPACK_IMPORTED_MODULE_20__","container","direction","flexGrow","justify","_ref13","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_26__","InputProps","endAdornment","_material_ui_core_InputAdornment__WEBPACK_IMPORTED_MODULE_27__","min","value","onChange","target","item","xs","_ref14","_AsyncFetch__WEBPACK_IMPORTED_MODULE_41__","_ref15","_material_ui_core_LinearProgress__WEBPACK_IMPORTED_MODULE_18__","Markets","_ref16","market","assign","Layout","_ref17","children","_material_ui_styles__WEBPACK_IMPORTED_MODULE_40__","_material_ui_core_CssBaseline__WEBPACK_IMPORTED_MODULE_19__","Hero","_ref18","component","gutterBottom","creator","_ref19","_tokenfoundry_react_metamask__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","createMetaMaskContext"],"mappings":"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","file":"static/js/main.fce7e937.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass AsyncFetch extends React.Component {\n  state = {\n    status: \"idle\",\n    result: null\n  };\n\n  mounted = false;\n\n  componentDidMount() {\n    this.mounted = true;\n    if (this.props.autoFetch) {\n      this.fetch();\n    }\n  }\n  componentDidUpdate(prevProps) {\n    if (this.props.fetch !== prevProps.fetch) {\n      this.fetch();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  fetch = args => {\n    this.setState(\n      {\n        status: \"loading\"\n      },\n      () => {\n        this.props\n          .fetch(args)\n          .then(result => {\n            this.mounted &&\n              this.setState({\n                status: \"success\",\n                result\n              });\n          })\n          .catch(e => {\n            this.mounted &&\n              this.setState({\n                status: \"error\",\n                result: e.message\n              });\n          });\n      }\n    );\n  };\n\n  clear = () => {\n    this.setState({\n      result: null\n    });\n  };\n\n  render() {\n    return this.props.render({\n      ...this.state,\n      fetch: this.fetch,\n      clear: this.clear\n    });\n  }\n}\n\nAsyncFetch.propTypes = {\n  autoFetch: PropTypes.bool,\n  // the fetch call function\n  fetch: PropTypes.func.isRequired,\n  render: PropTypes.func.isRequired\n};\n\nAsyncFetch.defaultProps = {\n  autoFetch: false\n};\n\nexport default AsyncFetch;\n","import React, { useContext, useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport PropTypes from \"prop-types\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Modal from \"@material-ui/core/Modal\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Paper from \"@material-ui/core/Paper\";\nimport StarIcon from \"@material-ui/icons/StarBorder\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { distanceInWordsStrict } from \"date-fns\";\nimport styled from \"styled-components\";\nimport Augur from \"augur.js\";\nimport debounce from \"lodash.debounce\";\nimport pify from \"pify\";\n\n//import linkifyUrls from \"linkify-urls\";\n\nimport MetaMaskContext from \"./metamask\";\n\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\n\nimport AsyncFetch from \"./AsyncFetch\";\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n    primary: {\n      main: \"#ff731e\"\n    },\n    secondary: {\n      main: \"#1fff9e\"\n    },\n    error: {\n      main: \"#ff2a1f\"\n    }\n  }\n});\n\nexport const augur = new Augur();\nexport const { constants } = augur;\n\nconst creator = \"0xB841457Ef1EB2c4237eD840e304D8E6091EB1912\";\n\nconst connectOptions = {\n  augurNode: \"wss://augur-node.augur.casino\",\n  //wss://dev.augur.net/augur-node\", //wss://augur-node.augur.casino\",\n  ethereumNode: {\n    //http: \"https://rinkeby.infura.io/72b98520d10248d49ac6177895cc8b8b\",\n    http:\n      \"https://eth-mainnet.alchemyapi.io/jsonrpc/7sE1TzCIRIQA3NJPD5wg7YRiVjhxuWAE\",\n    //ws: \"\",\n\n    // http: \"https://test.augur.net/ethereum-http\",\n    // ws: \"wss://test.augur.net/ethereum-ws\",\n\n    pollingIntervalMilliseconds: 10000,\n    blockRetention: 100,\n    connectionTimeout: 60000\n  },\n\n  /*{\n    http: \"https://rinkeby.infura.io/72b98520d10248d49ac6177895cc8b8b\"\n    //ws: \"wss://rinkeby.augur.net/ethereum-ws\",\n    //pollingIntervalMilliseconds: 10000,\n    //blockRetention: 100,\n    //connectionTimeout: 60000\n  }*/\n\n  useWeb3Transport: typeof web3 !== \"undefined\",\n  useWebsocketToConnectAugurNode: true\n};\n\nconsole.log(\"connectOptions\", connectOptions);\n\nconst styles = theme => ({\n  \"@global\": {\n    body: {\n      //   backgroundColor: theme.palette.common.white\n    }\n  },\n  appBar: {\n    position: \"relative\"\n  },\n  toolbarTitle: {\n    flex: 1\n  },\n  layout: {\n    width: \"auto\",\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n    [theme.breakpoints.up(900 + theme.spacing(6))]: {\n      width: 900,\n      marginLeft: \"auto\",\n      marginRight: \"auto\"\n    }\n  },\n  heroContent: {\n    maxWidth: 600,\n    margin: \"0 auto\",\n    padding: `${theme.spacing(8)}px 0 ${theme.spacing(6)}px`\n  },\n  cardHeader: {\n    //  backgroundColor: theme.palette.grey[200]\n  },\n  cardPricing: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"baseline\",\n    marginBottom: theme.spacing(2)\n  },\n  cardActions: {\n    [theme.breakpoints.up(\"sm\")]: {\n      paddingBottom: theme.spacing(2)\n    }\n  },\n  footer: {\n    marginTop: theme.spacing(8),\n    borderTop: `1px solid ${theme.palette.divider}`,\n    padding: `${theme.spacing(6)}px 0`\n  }\n});\n\nfunction isInstalled() {\n  if (typeof web3 !== \"undefined\") {\n    console.log(\"MetaMask is installed\");\n  } else {\n    console.log(\"MetaMask is not installed\");\n  }\n}\n\nfunction isLocked() {\n  console.log(\"typeof web3\", typeof web3);\n  //console.log(web3);\n  if (typeof global.web3 !== \"undefined\") {\n    console.log(global.web3);\n    global.web3.eth.getAccounts(function(err, accounts) {\n      if (err != null) {\n        console.log(err);\n      } else if (accounts.length === 0) {\n        console.log(\"MetaMask is locked\");\n      } else {\n        console.log(\"MetaMask is unlocked\");\n      }\n    });\n  } else {\n  }\n}\n\n// wrapper for <AugurApi/> component\nclass AugurApi extends React.Component {\n  state = {\n    connected: false\n  };\n  constructor(connectOptions) {\n    super();\n    this.connectOptions = connectOptions;\n    this.augurNode = null;\n    this.ethereumNode = null;\n    this.connect();\n  }\n  connect = () => {\n    augur.rpc.setDebugOptions({ broadcast: true, connect: true, tx: true });\n    return pify(augur.connect)(connectOptions)\n      .then(({ augurNode, ethereumNode }) => {\n        console.log(\"connected\", { augurNode, ethereumNode });\n        this.augurNode = augurNode;\n        this.ethereumNode = ethereumNode;\n        this.setState({\n          connected: true\n        });\n\n        isInstalled();\n        isLocked();\n\n        //  const Web3 = require(\"web3\");\n\n        // connect to any peer; using infura here\n\n        // const web3 = new Web3(\n        //   new Web3.providers.HttpProvider(\"https://ropsten.infura.io/<TOKEN>\")\n        // );\n\n        // contents of keystore file, can do a fs read\n\n        // Or sign using private key from decrypted keystore file\n\n        /*\n\nweb3.eth.accounts.signTransaction(rawTransaction, decryptedAccount.privateKey)\n\n  .then(console.log);\n\n*/\n      })\n      .catch(console.log);\n  };\n  getMarkets = params =>\n    (this.ethereumNode &&\n      pify(augur.markets.getMarkets)({\n        universe: this.ethereumNode.contracts.Universe,\n        ...params\n      }).then(\n        marketIds =>\n          console.log(\"marketIds\", marketIds) ||\n          // get related infos\n          pify(augur.markets.getMarketsInfo)({\n            marketIds\n          })\n      )) ||\n    Promise.resolve([]);\n\n  //trading.getBetterWorseOrders\n\n  getBetterWorseOrders = params =>\n    (this.ethereumNode && pify(augur.trading.getBetterWorseOrders)(params)) ||\n    Promise.resolve([]);\n\n  getOrders = params =>\n    (this.ethereumNode && pify(augur.trading.getOrders)(params)) ||\n    Promise.resolve([]);\n\n  placeTrade = params =>\n    (this.ethereumNode && pify(augur.trading.placeTrade)(params)) ||\n    Promise.resolve([]);\n\n  getCategories = () =>\n    (this.ethereumNode &&\n      pify(augur.markets.getCategories)({\n        universe: this.ethereumNode.contracts.Universe\n      })) ||\n    Promise.resolve([]);\n\n  render() {\n    return this.props.render({\n      connected: this.state.connected,\n      getMarkets: this.getMarkets,\n      getOrders: this.getOrders,\n      placeTrade: this.placeTrade,\n      getBetterWorseOrders: this.getBetterWorseOrders,\n      getCategories: this.getCategories,\n      augurNode: this.augurNode,\n      ethereumNode: this.ethereumNode\n    });\n  }\n}\n\n// load and display markets list\nconst MarketsList = ({ getMarkets }) => (\n  <AsyncFetch\n    fetch={getMarkets}\n    autoFetch={true}\n    render={({ status, result }) => {\n      if (status === \"success\") {\n        return <Markets markets={result} />;\n      } else if (status === \"loading\") {\n        return <LinearProgress style={{ marginTop: 50 }} />;\n      }\n      return null;\n    }}\n  />\n);\n\n// load and display top categories\nconst TopCategories = ({ getCategories, onCategoryClick }) => (\n  <AsyncFetch\n    fetch={getCategories}\n    autoFetch={true}\n    render={({ status, result }) => {\n      if (status === \"success\" && result) {\n        const topCategories = result.sort(sortCategories);\n        topCategories.reverse();\n        return (\n          <Grid container spacing={1} style={{ paddingTop: 20 }}>\n            {topCategories.slice(0, 16).map(category => (\n              <Grid item key={category.categoryName}>\n                <Button\n                  size=\"small\"\n                  onClick={() => onCategoryClick(category)}\n                  variant=\"outlined\"\n                >\n                  {category.categoryName}\n                </Button>\n              </Grid>\n            ))}\n          </Grid>\n        );\n      }\n      return null;\n    }}\n  />\n);\n\nconst OUTCOME_HEIGHT = 15;\n\nconst Outcome = ({ style, price }) => (\n  <div\n    style={{\n      border: \"1px solid silver\",\n      display: \"inline-block\",\n      fontSize: 0,\n      height: OUTCOME_HEIGHT,\n      width: \"100%\",\n      ...style\n    }}\n  >\n    <div\n      style={{\n        display: \"inline-block\",\n        height: \"100%\",\n        width: price * 100.0 + \"%\",\n        backgroundColor: \"#51c279\"\n      }}\n    />\n    <div\n      style={{\n        display: \"inline-block\",\n        height: \"100%\",\n        width: (1 - price) * 100.0 + \"%\",\n        backgroundColor: \"#c6655d\"\n      }}\n    />\n  </div>\n);\n\nconst sortCategories = (a, b) => {\n  if (parseFloat(a.openInterest) < parseFloat(b.openInterest)) {\n    return -1;\n  } else if (parseFloat(a.openInterest) > parseFloat(b.openInterest)) {\n    return 1;\n  }\n  return 0;\n};\n\n//const TopCategories = ({}) => ()\n\nconst MarketsContainer = styled.div`\n  display: \"flex\";\n  margin: 20px auto;\n  max-width: 80vw;\n`;\n\nconst SimpleTable = ({ titles, rows }) => {\n  return (\n    <Table style={{ width: \"100%\" }}>\n      <TableHead>\n        <TableRow>\n          {titles.map(title => (\n            <TableCell key={title}>{title}</TableCell>\n          ))}\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {rows.map(row => (\n          <TableRow key={row.join(\"-\")}>\n            {row.map((cell, i) => (\n              <TableCell key={i + \"\" + cell}>{cell}</TableCell>\n            ))}\n          </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n  );\n};\n\n// const text2html = text =>\n//   (text && linkifyUrls(text.replace(/\\n/gm, \"<br/>\"))) || \"\";\n\nconst MarketDetails = ({ details }) => (\n  <div\n    style={{ margin: 20, fontSize: \"0.85em\" }}\n    dangerouslySetInnerHTML={{ __html: details }}\n  />\n);\n\nconst getMaxOutcome = outcomes =>\n  outcomes.map(outcome => outcome.price).sort()[outcomes.length - 1];\n\nconst Market = withStyles(styles)(\n  ({\n    category,\n    classes,\n    augur,\n    id,\n    description,\n    openInterest,\n    settlementFee,\n    volume,\n    marketType,\n    outcomes,\n    endTime,\n    details,\n    tags,\n    reportingState\n  }) => {\n    const onBetClick = () => {\n      console.log(\"ioooo\");\n      handleOpen();\n    };\n\n    const [open, setOpen] = React.useState(false);\n    // getModalStyle is not a pure function, we roll the style only on the first render\n    const [modalStyle] = React.useState(getModalStyle);\n\n    const handleOpen = () => {\n      setOpen(true);\n    };\n\n    const handleClose = () => {\n      setOpen(false);\n    };\n    const classes2 = useModalStyles();\n\n    return (\n      <Card style={{ margin: 10 }}>\n        <CardHeader\n          title={description}\n          subheader={category}\n          titleTypographyProps={{ variant: \"h6\" }}\n          subheaderTypographyProps={{ align: \"left\" }}\n          action={true ? <StarIcon style={{ cursor: \"pointer\" }} /> : null}\n          className={classes.cardHeader}\n        />\n        <CardContent>\n          {marketType === \"yesNo\" && (\n            <Outcome price={getMaxOutcome(outcomes)} />\n          )}\n          <Typography variant=\"subtitle1\" align=\"left\" key={id}>\n            <MarketDetails details={details} />\n            <SimpleTable\n              titles={[\n                \"volume\",\n                \"eth open interest\",\n                \"eth est. fee\",\n                \"expires\"\n              ]}\n              rows={[\n                [\n                  volume,\n                  openInterest,\n                  settlementFee * 100 + \"%\",\n                  distanceInWordsStrict(new Date(), new Date(endTime * 1000), {\n                    addSuffix: true,\n                    unit: \"d\"\n                  })\n                ]\n              ]}\n            />\n          </Typography>\n        </CardContent>\n        <CardActions className={classes.cardActions}>\n          <div style={{ textAlign: \"center\", width: \"100%\" }}>\n            {(reportingState === \"FINALIZED\" && (\n              <Chip icon={<CloseIcon />} label=\"FINALIZED\" />\n            )) || (\n              <React.Fragment>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={onBetClick}\n                >\n                  PLACE BET\n                </Button>\n                <Modal\n                  aria-labelledby=\"simple-modal-title\"\n                  aria-describedby=\"simple-modal-description\"\n                  open={open}\n                  onClose={handleClose}\n                >\n                  <div style={modalStyle} className={classes2.paper}>\n                    <MarketBet\n                      marketId=\"0xf4f35c7909d6496779c390abbe71b5fc6353614c\"\n                      augur={augur}\n                    />\n                  </div>\n                </Modal>\n              </React.Fragment>\n            )}\n          </div>\n        </CardActions>\n      </Card>\n    );\n  }\n);\n\nconst sortByKey = key => (a, b) => {\n  if (a[key] < b[key]) {\n    return 1;\n  } else if (a[key] > b[key]) {\n    return -1;\n  }\n  return 0;\n};\n\nconst getBestSell = sells => {\n  return sells.sort(sortByKey(\"price\")).reverse()[0];\n};\n\nconst getBestBuy = buys => {\n  return buys.sort(sortByKey(\"price\"))[0];\n};\n\nconst OrderBook = ({ data }) => {\n  console.log(\"xxx\", data);\n  const { buy, sell } = data[Object.keys(data)[0]][\"1\"];\n  const bestBuy = getBestBuy(Object.values(buy));\n  const bestSell = getBestSell(Object.values(sell));\n  console.log(\"bestBuy\", bestBuy);\n  console.log(\"bestSell\", bestSell);\n  return <div>BLALBA</div>;\n};\n\nconst smallify = num => parseInt(num * 10000, 10) / 10000;\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50;\n  // + rand();\n  const left = 50;\n  // + rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nconst useModalStyles = makeStyles(theme => ({\n  paper: {\n    position: \"absolute\",\n    width: 500,\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(4),\n    outline: \"none\"\n  }\n}));\n\nconst round = num => parseInt(num * 100, 10) / 100;\n\nconst Web3Accounts = ({ render }) => {\n  const [accounts, setAccounts] = useState([]);\n\n  useEffect(() => {\n    global.web3.eth.getAccounts(function(err, accounts) {\n      setAccounts(accounts);\n    });\n  });\n\n  return render({ accounts });\n};\n\nconst MarketBetView = withStyles(styles)(\n  ({ classes, augur, orders, marketId }) => {\n    const [bet, setBet] = useState(0);\n\n    const { buy, sell } = orders[Object.keys(orders)[0]][\"1\"];\n    const bestBuy = getBestBuy(Object.values(buy));\n    const bestSell = getBestSell(Object.values(sell));\n\n    const oddsTrue = bestSell.price * 100;\n    const oddsFalse = 100 - bestBuy.price * 100;\n    const payoutTrue = bet / bestSell.price;\n    const payoutFalse = (bet / (1 - bestBuy.price)).toPrecision(4);\n\n    // console.log({ web3, accounts, openMetaMask, error });\n\n    // if (openMetaMask) {\n    //   //openMetaMask();\n    // }\n\n    const onButtonClick = (outcome, accounts) => e => {\n      const tradeParams = {\n        //meta: loginAccount,\n        amount: outcome ? payoutTrue : payoutFalse,\n        sharesProvided: \"0\",\n        limitPrice: outcome ? oddsTrue / 100 + \"\" : oddsFalse / 100 + \"\",\n        minPrice: \"0\",\n        maxPrice: \"1\",\n        numTicks: \"10000\",\n        _direction: 0,\n        _market: marketId,\n        _outcome: outcome ? 1 : 0,\n        doNotCreateOrders: false,\n        meta: {\n          accountType: \"metaMask\",\n          address: accounts[0],\n          signer: null\n        }\n      };\n\n      console.log(\"tradeParams\", tradeParams);\n\n      augur.placeTrade({\n        ...tradeParams,\n        onSent: function(result) {\n          console.log(\"onSent\", result);\n        },\n        onSuccess: function(err, result) {\n          console.log(\"onSuccess\", err, result);\n        },\n        onFailed: function(result) {\n          console.log(\"onFailed\", result);\n        }\n      });\n    };\n\n    return (\n      <Grid\n        container\n        direction=\"column\"\n        style={{ flexGrow: 1 }}\n        justify=\"center\"\n        alignItems=\"center\"\n      >\n        <Web3Accounts\n          render={({ accounts }) => (\n            <React.Fragment>\n              <Typography\n                variant=\"h4\"\n                id=\"modal-title\"\n                style={{ marginBottom: 20 }}\n              >\n                Place Bet <span style={{ fontSize: 8 }}>{marketId}</span>\n              </Typography>\n\n              <TextField\n                type=\"number\"\n                variant=\"outlined\"\n                label=\"Bet amount\"\n                InputProps={{\n                  endAdornment: (\n                    <InputAdornment position=\"end\">Eth</InputAdornment>\n                  ),\n                  style: { fontSize: \"2em\", textAlign: \"center\" }\n                }}\n                min=\"0\"\n                value={bet}\n                onChange={e => setBet(e.target.value)}\n              />\n              <Grid\n                container\n                item\n                direction=\"row\"\n                style={{\n                  flexGrow: 0,\n                  fontSize: \"1.5em\",\n                  margin: \"40px 0px\"\n                  //marginTop: 40,\n                  //marginBottom: 20\n                }}\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item xs={6} container direction=\"column\" justify=\"center\">\n                  <Grid item>Odds : {smallify(oddsTrue)} %</Grid>\n                  <Grid item>Payout : {smallify(payoutTrue)}</Grid>\n                  <Grid item style={{ marginTop: 40, textAlign: \"center\" }}>\n                    <Button\n                      variant=\"contained\"\n                      color=\"secondary\"\n                      onClick={onButtonClick(true, accounts)}\n                    >\n                      YES\n                    </Button>\n                  </Grid>\n                </Grid>\n                <Grid item xs={6} container direction=\"column\">\n                  <Grid item>Odds : {smallify(oddsFalse)} %</Grid>\n                  <Grid item>Payout : {smallify(payoutFalse)}</Grid>\n                  <Grid item style={{ marginTop: 40, textAlign: \"center\" }}>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={onButtonClick(false, accounts)}\n                    >\n                      NO\n                    </Button>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </React.Fragment>\n          )}\n        />\n      </Grid>\n    );\n  }\n);\n\nconst MarketBet = ({ augur, marketId }) => (\n  <AsyncFetch\n    fetch={() =>\n      augur.getOrders({\n        marketId\n        // outcome: 0,\n        //orderType: \"buy\",\n        //price: \"0.19\"\n      })\n    }\n    autoFetch={true}\n    render={({ status, result }) => {\n      console.log(\"result\", result);\n\n      if (status === \"success\") {\n        return (\n          <React.Fragment>\n            <MarketBetView augur={augur} orders={result} marketId={marketId} />\n          </React.Fragment>\n        );\n      } else if (status === \"loading\") {\n        return <LinearProgress style={{ marginTop: 50 }} />;\n      }\n      return null;\n    }}\n  />\n);\n\nconst Markets = ({ markets, augur }) => (\n  <MarketsContainer>\n    {markets.map(market => (\n      <Market key={market.description} {...market} augur={augur} />\n    ))}\n  </MarketsContainer>\n);\n\nconst Layout = ({ classes, children }) => (\n  <React.Fragment>\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <main className={classes.layout}>{children}</main>\n    </ThemeProvider>\n  </React.Fragment>\n);\n\nconst Hero = ({ classes }) => (\n  <div className={classes.heroContent}>\n    <Typography\n      component=\"h1\"\n      variant=\"h2\"\n      align=\"center\"\n      color=\"textPrimary\"\n      gutterBottom\n    >\n      BugBet\n    </Typography>\n  </div>\n);\n\nconst Index = props => {\n  const { classes } = props;\n  return (\n    <Layout classes={classes}>\n      <Hero classes={classes} />\n      <AugurApi\n        render={augur => {\n          if (augur.connected) {\n            return (\n              <>\n                <AsyncFetch\n                  fetch={() => augur.getMarkets({ creator })}\n                  autoFetch={true}\n                  render={({ status, result }) => {\n                    if (status === \"success\") {\n                      return <Markets markets={result} augur={augur} />;\n                    } else if (status === \"loading\") {\n                      return <LinearProgress style={{ marginTop: 50 }} />;\n                    }\n                    return null;\n                  }}\n                />\n              </>\n            );\n          }\n          return <LinearProgress style={{ marginTop: 50 }} />;\n        }}\n      />\n    </Layout>\n  );\n};\n\nIndex.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Index);\n","// metamask.js\nimport { createMetaMaskContext } from \"@tokenfoundry/react-metamask\";\n\nconst MetaMaskContext = createMetaMaskContext();\nexport default MetaMaskContext;\n"],"sourceRoot":""}